{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yadav\\\\OneDrive\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\CommentList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentList() {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get('/api/comments');\n        setComments(response.data);\n      } catch (error) {\n        console.error('Failed to fetch comments', error);\n      }\n    };\n    fetchComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-2 border border-gray-300 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 border-t border-gray-300\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: reply.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, reply._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentList, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","CommentList","_s","comments","setComments","fetchComments","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","text","replies","reply","_id","_c","$RefreshReg$"],"sources":["C:/Users/yadav/OneDrive/Desktop/project/frontend/src/components/CommentList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CommentList() {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.get('/api/comments');\r\n        setComments(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch comments', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-md mx-auto\">\r\n      <h2 className=\"text-2xl mb-4\">Comments</h2>\r\n      {comments.map(comment => (\r\n        <div key={comment._id} className=\"mb-4 p-2 border border-gray-300 rounded\">\r\n          <p>{comment.text}</p>\r\n          <div className=\"mt-2\">\r\n            {comment.replies.map(reply => (\r\n              <div key={reply._id} className=\"p-2 border-t border-gray-300\">\r\n                <p>{reply.text}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentList;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,eAAe,CAAC;QACjDH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCZ,OAAA;MAAIW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1Cb,QAAQ,CAACc,GAAG,CAACC,OAAO,iBACnBlB,OAAA;MAAuBW,SAAS,EAAC,yCAAyC;MAAAC,QAAA,gBACxEZ,OAAA;QAAAY,QAAA,EAAIM,OAAO,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBhB,OAAA;QAAKW,SAAS,EAAC,MAAM;QAAAC,QAAA,EAClBM,OAAO,CAACE,OAAO,CAACH,GAAG,CAACI,KAAK,iBACxBrB,OAAA;UAAqBW,SAAS,EAAC,8BAA8B;UAAAC,QAAA,eAC3DZ,OAAA;YAAAY,QAAA,EAAIS,KAAK,CAACF;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADXK,KAAK,CAACC,GAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAREE,OAAO,CAACI,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAShB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACd,EAAA,CAjCQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}