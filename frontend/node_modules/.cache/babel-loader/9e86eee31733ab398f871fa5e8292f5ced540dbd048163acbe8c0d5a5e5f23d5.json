{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yadav\\\\OneDrive\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Reply from './Reply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  token,\n  comments,\n  setComments\n}) {\n  _s();\n  const [content, setContent] = useState('');\n  const postComment = async () => {\n    try {\n      const res = await axios.post('/api/comments', {\n        content\n      }, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setComments([...comments, res.data]);\n      setContent('');\n    } catch (err) {\n      console.error('Error posting comment', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-lg mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Write a comment...\",\n      value: content,\n      onChange: e => setContent(e.target.value),\n      className: \"border rounded p-2 w-full mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: postComment,\n      className: \"bg-blue-500 text-white p-2 rounded w-full\",\n      children: \"Post Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-4\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border-b p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.user.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), \" \", comment.content, /*#__PURE__*/_jsxDEV(Reply, {\n          token: token,\n          commentId: comment._id,\n          setComments: setComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mt-2\",\n          children: comment.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"ml-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [reply.user.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this), \" \", reply.content]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Comments, \"7qMZGOaOfwYbu+hEA/2Jy8mHHnE=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","axios","Reply","jsxDEV","_jsxDEV","Comments","token","comments","setComments","_s","content","setContent","postComment","res","post","headers","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","comment","user","username","commentId","_id","replies","reply","index","_c","$RefreshReg$"],"sources":["C:/Users/yadav/OneDrive/Desktop/project/frontend/src/components/Comments.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Reply from './Reply';\r\n\r\nfunction Comments({ token, comments, setComments }) {\r\n    const [content, setContent] = useState('');\r\n\r\n    const postComment = async () => {\r\n        try {\r\n            const res = await axios.post(\r\n                '/api/comments',\r\n                { content },\r\n                {\r\n                    headers: { 'x-auth-token': token },\r\n                }\r\n            );\r\n            setComments([...comments, res.data]);\r\n            setContent('');\r\n        } catch (err) {\r\n            console.error('Error posting comment', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-lg mx-auto p-4\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Comments</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Write a comment...\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                className=\"border rounded p-2 w-full mb-4\"\r\n            />\r\n            <button onClick={postComment} className=\"bg-blue-500 text-white p-2 rounded w-full\">\r\n                Post Comment\r\n            </button>\r\n            <ul className=\"mt-4\">\r\n                {comments.map((comment) => (\r\n                    <li key={comment._id} className=\"border-b p-2\">\r\n                        <strong>{comment.user.username}:</strong> {comment.content}\r\n                        <Reply token={token} commentId={comment._id} setComments={setComments} />\r\n                        <ul className=\"mt-2\">\r\n                            {comment.replies.map((reply, index) => (\r\n                                <li key={index} className=\"ml-4\">\r\n                                    <strong>{reply.user.username}:</strong> {reply.content}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}