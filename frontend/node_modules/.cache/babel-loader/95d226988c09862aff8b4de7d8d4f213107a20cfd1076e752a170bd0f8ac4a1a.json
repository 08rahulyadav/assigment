{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yadav\\\\OneDrive\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment({\n  comment\n}) {\n  _s();\n  const [reply, setReply] = useState('');\n  const [showReplies, setShowReplies] = useState(false);\n  const [error, setError] = useState('');\n  const handleReply = async e => {\n    e.preventDefault(); // Prevents the default form submission behavior\n    if (reply.trim()) {\n      // Ensure the reply is not just empty spaces\n      try {\n        await axios.post(`http://localhost:5000/api/comments/${comment._id}/reply`, {\n          content: reply\n        });\n        setReply(''); // Clear the reply input\n        setShowReplies(true); // Show replies\n        setError(''); // Clear any previous errors\n      } catch (error) {\n        var _error$response;\n        console.error('Error posting reply:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        setError('Failed to post reply');\n      }\n    } else {\n      setError('Reply cannot be empty'); // Inform the user if the reply is empty\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border p-4 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: comment.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowReplies(!showReplies),\n      className: \"text-blue-500 mt-2\",\n      children: showReplies ? 'Hide Replies' : 'Show Replies'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), showReplies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-4 mt-2\",\n      children: [comment.replies && comment.replies.length > 0 ? comment.replies.map(reply => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"border p-2 mb-2\",\n        children: reply.content\n      }, reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No replies yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReply,\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: reply,\n          onChange: e => setReply(e.target.value),\n          placeholder: \"Reply...\",\n          className: \"border p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white p-2 mt-2\",\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"Ryj5wpFe59Ila7LezE9L1tLCrLg=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Comment","comment","_s","reply","setReply","showReplies","setShowReplies","error","setError","handleReply","e","preventDefault","trim","post","_id","content","_error$response","console","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","replies","length","map","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/yadav/OneDrive/Desktop/project/frontend/src/components/Comment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Comment({ comment }) {\r\n  const [reply, setReply] = useState('');\r\n  const [showReplies, setShowReplies] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleReply = async (e) => {\r\n    e.preventDefault(); // Prevents the default form submission behavior\r\n    if (reply.trim()) { // Ensure the reply is not just empty spaces\r\n      try {\r\n        await axios.post(`http://localhost:5000/api/comments/${comment._id}/reply`, { content: reply });\r\n        setReply(''); // Clear the reply input\r\n        setShowReplies(true); // Show replies\r\n        setError(''); // Clear any previous errors\r\n      } catch (error) {\r\n        console.error('Error posting reply:', error.response?.data || error.message);\r\n        setError('Failed to post reply');\r\n      }\r\n    } else {\r\n      setError('Reply cannot be empty'); // Inform the user if the reply is empty\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border p-4 mb-4\">\r\n      <p>{comment.content}</p>\r\n      <button\r\n        onClick={() => setShowReplies(!showReplies)}\r\n        className=\"text-blue-500 mt-2\"\r\n      >\r\n        {showReplies ? 'Hide Replies' : 'Show Replies'}\r\n      </button>\r\n      {showReplies && (\r\n        <div className=\"ml-4 mt-2\">\r\n          {comment.replies && comment.replies.length > 0 ? (\r\n            comment.replies.map((reply) => (\r\n              <p key={reply._id} className=\"border p-2 mb-2\">\r\n                {reply.content}\r\n              </p>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-gray-500\">No replies yet</p>\r\n          )}\r\n          <form onSubmit={handleReply} className=\"mt-2\">\r\n            <input\r\n              type=\"text\"\r\n              value={reply}\r\n              onChange={(e) => setReply(e.target.value)}\r\n              placeholder=\"Reply...\"\r\n              className=\"border p-2 w-full\"\r\n            />\r\n            <button type=\"submit\" className=\"bg-blue-500 text-white p-2 mt-2\">\r\n              Reply\r\n            </button>\r\n          </form>\r\n          {error && <p className=\"text-red-500\">{error}</p>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}